# Directory: snowflake_validation_framework
# This script assumes you will copy/move your existing code into the structure shown below.

# -------------------------
# File: common/logger.py
# -------------------------
import logging
import os
from dotenv import load_dotenv

load_dotenv()

LOG_DIR = os.getenv("LOG_DIR", "logs")
os.makedirs(LOG_DIR, exist_ok=True)

log_path = os.path.join(LOG_DIR, "validation.log")

logging.basicConfig(
    filename=log_path,
    filemode='a',
    format='%(asctime)s [%(levelname)s] %(message)s',
    level=logging.INFO
)

logger = logging.getLogger(__name__)

# -------------------------
# File: common/config_loader.py
# -------------------------
import json
import pandas as pd

def load_config(path):
    with open(path, 'r') as f:
        return json.load(f)

def load_excel(path):
    return pd.read_excel(path)

# -------------------------
# File: features/validation.feature
# -------------------------
Feature: Snowflake Data Validations

  Scenario: Run all validations for all tables
    Given the config file "config/config.json" is loaded
    And the table list from "config/table_list.xlsx" is loaded
    When I run all validations
    Then validation results should be written to Excel

# -------------------------
# File: steps/validation_steps.py
# -------------------------
from behave import given, when, then
from runner.run_validation import run_validation

@given('the config file "{config}" is loaded')
def step_load_config(context, config):
    context.config_path = config

@given('the table list from "{excel}" is loaded')
def step_load_table_list(context, excel):
    context.excel_path = excel

@when('I run all validations')
def step_run_validations(context):
    run_validation(context.excel_path, context.config_path)

@then('validation results should be written to Excel')
def step_verify_output(context):
    print("âœ… Validation completed. Check output folder.")

# -------------------------
# File: .env
# -------------------------
LOG_DIR=logs

# -------------------------
# Sample shell command to run tests
# -------------------------
# > behave
